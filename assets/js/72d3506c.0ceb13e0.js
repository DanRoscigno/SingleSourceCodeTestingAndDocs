"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[996],{4920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>V,contentTitle:()=>A,default:()=>F,frontMatter:()=>M,metadata:()=>_,toc:()=>Y});var s=t(7624),a=t(2172);function i(e){const n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"create-a-database",children:"Create a database"}),"\n",(0,s.jsxs)(n.p,{children:["Type these two lines in at the ",(0,s.jsx)(n.code,{children:"StarRocks > "})," prompt and press enter after each:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Create a database"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/f11fcd0f1e80526c09fa838c0fa31c315bc0598c/ci/SQL/quickstart/basic/quickstart_DB.sql#L1-L3\n"})}),"\n",(0,s.jsx)(n.h3,{id:"create-two-tables",children:"Create two tables"}),"\n",(0,s.jsx)(n.h4,{id:"crashdata",children:"Crashdata"}),"\n",(0,s.jsx)(n.p,{children:"The crash dataset contains many more fields than these, the schema has been trimmed\ndown to include only the fields that might be useful to answer questions about the\nimpact weather has on driving conditions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Crash data DDL"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/NYPD_table.sql#L1-L16\n"})}),"\n",(0,s.jsx)(n.h4,{id:"weatherdata",children:"Weatherdata"}),"\n",(0,s.jsx)(n.p,{children:"Similar to the crash data, the weather dataset has many more columns (a total of\n125 columns) and only the ones that are expected to answer the questions are\nincluded in the database."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Weather data DDL"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/Weather_table.sql#L1-L17\n"})})]})}function r(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}var o=t(1504),l=t(5456),c=t(3943),d=t(5592),h=t(5288),u=t(632),m=t(7128),p=t(1148);function g(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return g(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:a}}=e;return{value:n,label:t,attributes:s,default:a}}))}(t);return function(e){const n=(0,m.w)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function b(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:t}=e;const s=(0,d.Uz)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,u._M)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=x(e),[i,r]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!b({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[l,c]=j({queryString:t,groupId:s}),[d,u]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,p.IN)(t);return[s,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),m=(()=>{const e=l??d;return b({value:e,tabValues:a})?e:null})();(0,h.c)((()=>{m&&r(m)}),[m]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!b({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);r(e),c(e),u(e)}),[c,u,a]),tabValues:a}}var w=t(3664);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:r}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,c.MV)(),h=e=>{const n=e.currentTarget,t=o.indexOf(n),s=r[t].value;s!==a&&(d(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.c)("tabs",{"tabs--block":t},n),children:r.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:u,onClick:h,...i,className:(0,l.c)("tabs__item",y.tabItem,i?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function S(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function k(e){const n=f(e);return(0,s.jsxs)("div",{className:(0,l.c)("tabs-container",y.tabList),children:[(0,s.jsx)(v,{...e,...n}),(0,s.jsx)(S,{...e,...n})]})}function T(e){const n=(0,w.c)();return(0,s.jsx)(k,{...e,children:g(e.children)},String(n))}const L={tabItem:"tabItem_Ymn6"};function D(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,l.c)(L.tabItem,a),hidden:t,children:n})}function C(e){const n={a:"a",code:"code",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.M)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"These three clients are tested with this tutorial, you only need one:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"mysql CLI: You can run this from the Docker environment or your machine."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://dbeaver.io/download/",children:"DBeaver"})," is available as a community version and a Pro version."]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://dev.mysql.com/downloads/workbench/",children:"MySQL Workbench"})}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"configuring-the-client",children:"Configuring the client"}),"\n",(0,s.jsxs)(T,{groupId:"client",children:[(0,s.jsxs)(D,{value:"mysqlCLI",label:"mysql CLI",default:!0,children:[(0,s.jsxs)(n.p,{children:["The easiest way to use the mysql CLI is to run it from the StarRocks container ",(0,s.jsx)(n.code,{children:"starrocks-fe"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker exec -it quickstart \\\nmysql -P 9030 -h 127.0.0.1 -u root --prompt="StarRocks > "\n'})}),(0,s.jsxs)(n.p,{children:["If you would like to install the mysql CLI expand ",(0,s.jsx)(n.strong,{children:"mysql client install"})," below:"]}),(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"mysql client install"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["macOS: If you use Homebrew and do not need MySQL Server run ",(0,s.jsx)(n.code,{children:"brew install mysql"})," to install the CLI."]}),"\n",(0,s.jsxs)(n.li,{children:["Linux: Check your repository system for the ",(0,s.jsx)(n.code,{children:"mysql"})," client. For example, ",(0,s.jsx)(n.code,{children:"yum install mariadb"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Microsoft Windows: Install the ",(0,s.jsx)(n.a,{href:"https://dev.mysql.com/downloads/mysql/",children:"MySQL Community Server"})," and run the provided client, or run ",(0,s.jsx)(n.code,{children:"mysql"})," from WSL."]}),"\n"]})]})]}),(0,s.jsx)(D,{value:"DBeaver",label:"DBeaver",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://dbeaver.io/download/",children:"DBeaver"}),", and add a connection:\n",(0,s.jsx)(n.img,{alt:"Add a connection",src:t(24).c+"",width:"972",height:"170"})]}),"\n",(0,s.jsxs)(n.li,{children:["Configure the port, IP, and username. Test the connection, and click Finish if the test succeeds:\n",(0,s.jsx)(n.img,{alt:"Configure and test",src:t(4684).c+"",width:"1340",height:"1102"})]}),"\n"]})}),(0,s.jsx)(D,{value:"MySQLWorkbench",label:"MySQL Workbench",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Install the ",(0,s.jsx)(n.a,{href:"https://dev.mysql.com/downloads/workbench/",children:"MySQL Workbench"}),", and add a connection."]}),"\n",(0,s.jsxs)(n.li,{children:["Configure the port, IP, and username and then test the connection:\n",(0,s.jsx)(n.img,{alt:"Connection settings",src:t(1948).c+"",width:"1594",height:"998"})]}),"\n",(0,s.jsxs)(n.li,{children:["You will see warnings from the Workbench as it is checking for a specific MySQL version. You can ignore the warnings and when prompted, you can configure Workbench to stop displaying the warnings:\n",(0,s.jsx)(n.img,{alt:"Ignore warning",src:t(5344).c+"",width:"1030",height:"602"})]}),"\n"]})})]})]})}function q(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(C,{...e})}):C(e)}function N(e){const n={a:"a",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"These queries can be run in your SQL client."}),"\n",(0,s.jsx)(n.h4,{id:"how-many-crashes-are-there-per-hour-in-nyc",children:"How many crashes are there per hour in NYC?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Crashes per Hour"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/CrashesPerHour.sql#L1-L6\n"})}),"\n",(0,s.jsx)(n.p,{children:"Here is part of the output. Note that I am looking closer at January 6th and 7th as this is Monday and Tuesday of a non-holiday week. Looking at New Years Day is probably not indicative of a normal morning during rush-hour traffic."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"|       14 | 2014-01-06 06:00:00 |\n|       16 | 2014-01-06 07:00:00 |\n# highlight-start\n|       43 | 2014-01-06 08:00:00 |\n|       44 | 2014-01-06 09:00:00 |\n|       21 | 2014-01-06 10:00:00 |\n# highlight-end\n|       28 | 2014-01-06 11:00:00 |\n|       34 | 2014-01-06 12:00:00 |\n|       31 | 2014-01-06 13:00:00 |\n|       35 | 2014-01-06 14:00:00 |\n|       36 | 2014-01-06 15:00:00 |\n|       33 | 2014-01-06 16:00:00 |\n|       40 | 2014-01-06 17:00:00 |\n|       35 | 2014-01-06 18:00:00 |\n|       23 | 2014-01-06 19:00:00 |\n|       16 | 2014-01-06 20:00:00 |\n|       12 | 2014-01-06 21:00:00 |\n|       17 | 2014-01-06 22:00:00 |\n|       14 | 2014-01-06 23:00:00 |\n|       10 | 2014-01-07 00:00:00 |\n|        4 | 2014-01-07 01:00:00 |\n|        1 | 2014-01-07 02:00:00 |\n|        3 | 2014-01-07 03:00:00 |\n|        2 | 2014-01-07 04:00:00 |\n|        6 | 2014-01-07 06:00:00 |\n|       16 | 2014-01-07 07:00:00 |\n# highlight-start\n|       41 | 2014-01-07 08:00:00 |\n|       37 | 2014-01-07 09:00:00 |\n|       33 | 2014-01-07 10:00:00 |\n# highlight-end\n"})}),"\n",(0,s.jsx)(n.p,{children:"It looks like about 40 accidents on a Monday or Tuesday morning during rush hour traffic, and around the same at 17:00 hours."}),"\n",(0,s.jsx)(n.h4,{id:"what-is-the-average-temperature-in-nyc",children:"What is the average temperature in NYC?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Average Temperature"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/AverageTemp.sql#L1-L6\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.p,{children:"Note that this is data from 2014, NYC has not been this cold lately."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+-------------------------------+---------------------+\n| avg(HourlyDryBulbTemperature) | Time                |\n+-------------------------------+---------------------+\n|                            25 | 2014-01-01 00:00:00 |\n|                            25 | 2014-01-01 01:00:00 |\n|                            24 | 2014-01-01 02:00:00 |\n|                            24 | 2014-01-01 03:00:00 |\n|                            24 | 2014-01-01 04:00:00 |\n|                            24 | 2014-01-01 05:00:00 |\n|                            25 | 2014-01-01 06:00:00 |\n|                            26 | 2014-01-01 07:00:00 |\n"})}),"\n",(0,s.jsx)(n.h4,{id:"is-it-safe-to-drive-in-nyc-when-visibility-is-poor",children:"Is it safe to drive in NYC when visibility is poor?"}),"\n",(0,s.jsx)(n.p,{children:"Let's look at the number of crashes when visibility is poor (between 0 and 1.0 miles). To answer this question use a JOIN across the two tables on the DATETIME column."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Crashes per Hour when visibility is low"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/LowVisibility.sql#L1-L12\n"})}),"\n",(0,s.jsx)(n.p,{children:"The highest number of crashes in a single hour during low visibility is 129. There are multiple things to consider:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"February 3rd 2014 was a Monday"}),"\n",(0,s.jsx)(n.li,{children:"8AM is rush hour"}),"\n",(0,s.jsx)(n.li,{children:"It was raining (0.12 inches or precipitation that hour)"}),"\n",(0,s.jsx)(n.li,{children:"The temperature is 32 degrees F (the freezing point for water)"}),"\n",(0,s.jsx)(n.li,{children:"Visibility is bad at 0.25 miles, normal for NYC is 10 miles"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+---------+--------+------------+---------------+-------------------+\n| Crashes | Temp_F | Visibility | Precipitation | Hour              |\n+---------+--------+------------+---------------+-------------------+\n|     129 |     32 |       0.25 | 0.12          | 03 Feb 2014 08:00 |\n|     114 |     32 |       0.25 | 0.12          | 03 Feb 2014 09:00 |\n|     104 |     23 |       0.33 | 0.03          | 09 Jan 2015 08:00 |\n|      96 |   26.3 |       0.33 | 0.07          | 01 Mar 2015 14:00 |\n|      95 |     26 |       0.37 | 0.12          | 01 Mar 2015 15:00 |\n|      93 |     35 |       0.75 | 0.09          | 18 Jan 2015 09:00 |\n|      92 |     31 |       0.25 | 0.12          | 03 Feb 2014 10:00 |\n|      87 |   26.8 |        0.5 | 0.09          | 01 Mar 2015 16:00 |\n|      85 |     55 |       0.75 | 0.20          | 23 Dec 2015 17:00 |\n|      85 |     20 |       0.62 | 0.01          | 06 Jan 2015 11:00 |\n|      83 |   19.6 |       0.41 | 0.04          | 05 Mar 2015 13:00 |\n|      80 |     20 |       0.37 | 0.02          | 06 Jan 2015 10:00 |\n|      76 |   26.5 |       0.25 | 0.06          | 05 Mar 2015 09:00 |\n|      71 |     26 |       0.25 | 0.09          | 05 Mar 2015 10:00 |\n|      71 |   24.2 |       0.25 | 0.04          | 05 Mar 2015 11:00 |\n"})}),"\n",(0,s.jsx)(n.h4,{id:"what-about-driving-in-icy-conditions",children:"What about driving in icy conditions?"}),"\n",(0,s.jsx)(n.p,{children:"Water vapor can desublimate to ice at 40 degrees F; this query looks at temps between 0 and 40 degrees F."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:'reference title="Driving in icy conditions"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/385d2ce4e8d1c54bf62c44a517139621842db0bc/ci/SQL/quickstart/basic/Icy.sql#L1-L12\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The results for freezing temperatures suprised me a little, I did not expect too much traffic on a Sunday morning in the city on a cold January day.A quick look at ",(0,s.jsx)(n.a,{href:"https://weather.com/storms/winter/news/northeast-storm-rain-snow-wind",children:"weather.com"})," showed that there was a big storm with many crashes that day, just like what can be seen in the data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"+---------+--------+------------+---------------+-------------------+\n| Crashes | Temp_F | Visibility | Precipitation | Hour              |\n+---------+--------+------------+---------------+-------------------+\n|     192 |     34 |        1.5 | 0.09          | 18 Jan 2015 08:00 |\n|     170 |     21 |       NULL |               | 21 Jan 2014 10:00 |\n|     145 |     19 |       NULL |               | 21 Jan 2014 11:00 |\n|     138 |   33.5 |          5 | 0.02          | 18 Jan 2015 07:00 |\n|     137 |     21 |       NULL |               | 21 Jan 2014 09:00 |\n|     129 |     32 |       0.25 | 0.12          | 03 Feb 2014 08:00 |\n|     114 |     32 |       0.25 | 0.12          | 03 Feb 2014 09:00 |\n|     104 |     23 |        0.7 | 0.04          | 09 Jan 2015 08:00 |\n|      98 |     16 |          8 | 0.00          | 06 Mar 2015 08:00 |\n|      96 |   26.3 |       0.33 | 0.07          | 01 Mar 2015 14:00 |\n"})}),"\n",(0,s.jsx)(n.p,{children:"Drive carefully!"})]})}function R(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}function E(e){const n={code:"code",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"StarRocks Stream Load and curl take many arguments. Only the ones used in this tutorial are described here, the rest will be linked to in the more information section."}),"\n",(0,s.jsx)(n.h4,{id:"--location-trusted",children:(0,s.jsx)(n.code,{children:"--location-trusted"})}),"\n",(0,s.jsx)(n.p,{children:"This configures curl to pass credentials to any redirected URLs."}),"\n",(0,s.jsx)(n.h4,{id:"-u-root",children:(0,s.jsx)(n.code,{children:"-u root"})}),"\n",(0,s.jsx)(n.p,{children:"The username used to log in to StarRocks"}),"\n",(0,s.jsx)(n.h4,{id:"-t-filename",children:(0,s.jsx)(n.code,{children:"-T filename"})}),"\n",(0,s.jsx)(n.p,{children:"T is for transfer, the filename to transfer."}),"\n",(0,s.jsx)(n.h4,{id:"labelname-num",children:(0,s.jsx)(n.code,{children:"label:name-num"})}),"\n",(0,s.jsx)(n.p,{children:"The label to associate with this Stream Load job. The label must be unique, so if you run the job multiple times you can add a number and keep incrementing that."}),"\n",(0,s.jsx)(n.h4,{id:"column_separator",children:(0,s.jsx)(n.code,{children:"column_separator:,"})}),"\n",(0,s.jsxs)(n.p,{children:["If you load a file that uses a single ",(0,s.jsx)(n.code,{children:","})," then set it as shown above, if you use a different delimiter then set that delimiter here. Common choices are ",(0,s.jsx)(n.code,{children:"\\t"}),", ",(0,s.jsx)(n.code,{children:","}),", and ",(0,s.jsx)(n.code,{children:"|"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"skip_header1",children:(0,s.jsx)(n.code,{children:"skip_header:1"})}),"\n",(0,s.jsxs)(n.p,{children:["Some CSV files have a single header row with all of the column names listed, and some add a second line with datatypes. Set skip_header to ",(0,s.jsx)(n.code,{children:"1"})," or ",(0,s.jsx)(n.code,{children:"2"})," if you have one or two header lines, and set it to ",(0,s.jsx)(n.code,{children:"0"})," if you have none."]}),"\n",(0,s.jsx)(n.h4,{id:"enclose",children:(0,s.jsx)(n.code,{children:'enclose:\\"'})}),"\n",(0,s.jsxs)(n.p,{children:["It is common to enclose strings that contain embedded commas with double-quotes. The sample datasets used in this tutorial have geo locations that contain commas and so the enclose setting is set to ",(0,s.jsx)(n.code,{children:'\\"'}),". Remember to escape the ",(0,s.jsx)(n.code,{children:'"'})," with a ",(0,s.jsx)(n.code,{children:"\\"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"max_filter_ratio1",children:(0,s.jsx)(n.code,{children:"max_filter_ratio:1"})}),"\n",(0,s.jsxs)(n.p,{children:["This allows some errors in the data. Ideally this would be set to ",(0,s.jsx)(n.code,{children:"0"})," and the job would fail with any errors. It is set to ",(0,s.jsx)(n.code,{children:"1"})," to allow all rows to fail during debugging."]}),"\n",(0,s.jsx)(n.h4,{id:"columns",children:(0,s.jsx)(n.code,{children:"columns:"})}),"\n",(0,s.jsx)(n.p,{children:"The mapping of CSV file columns to StarRocks table columns. You will notice that there are many more columns in the CSV files than columns in the table. Any columns that are not included in the table are skipped."}),"\n",(0,s.jsxs)(n.p,{children:["You will also notice that there is some transformation of data included in the ",(0,s.jsx)(n.code,{children:"columns:"})," line for the crash dataset. It is very common to find dates and times in CSV files that do not conform to standards. This is the logic for converting the CSV data for the time and date of the crash to a DATETIME type:"]}),"\n",(0,s.jsx)(n.h5,{id:"the-columns-line",children:"The columns line"}),"\n",(0,s.jsxs)(n.p,{children:["This is the beginning of one data record. The date is in ",(0,s.jsx)(n.code,{children:"MM/DD/YYYY"})," format, and the time is ",(0,s.jsx)(n.code,{children:"HH:MI"}),". Since DATETIME is generally ",(0,s.jsx)(n.code,{children:"YYYY-MM-DD HH:MI:SS"})," we need to transform this data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:'08/05/2014,9:10,BRONX,10469,40.8733019,-73.8536375,"(40.8733019, -73.8536375)",\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This is the beginning of the ",(0,s.jsx)(n.code,{children:"columns:"})," parameter:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"-H \"columns:tmp_CRASH_DATE, tmp_CRASH_TIME, CRASH_DATE=str_to_date(concat_ws(' ', tmp_CRASH_DATE, tmp_CRASH_TIME), '%m/%d/%Y %H:%i')\n"})}),"\n",(0,s.jsx)(n.p,{children:"This instructs StarRocks to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Assign the content of the first column of the CSV file to ",(0,s.jsx)(n.code,{children:"tmp_CRASH_DATE"})]}),"\n",(0,s.jsxs)(n.li,{children:["Assign the content of the second column of the CSV file to ",(0,s.jsx)(n.code,{children:"tmp_CRASH_TIME"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"concat_ws()"})," concatenates ",(0,s.jsx)(n.code,{children:"tmp_CRASH_DATE"})," and ",(0,s.jsx)(n.code,{children:"tmp_CRASH_TIME"})," together with a space between them"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"str_to_date()"})," creates a DATETIME from the concatenated string"]}),"\n",(0,s.jsxs)(n.li,{children:["store the resulting DATETIME in the column ",(0,s.jsx)(n.code,{children:"CRASH_DATE"})]}),"\n"]})]})}function I(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}const M={sidebar_position:30},A="StarRocks basics",_={id:"shared-nothing",title:"StarRocks basics",description:"This tutorial covers:",source:"@site/docs/shared-nothing.md",sourceDirName:".",slug:"/shared-nothing",permalink:"/SingleSourceCodeTestingAndDocs/docs/shared-nothing",draft:!1,unlisted:!1,editUrl:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/main/website/docs/shared-nothing.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Embedding snippets of code from GitHub",permalink:"/SingleSourceCodeTestingAndDocs/docs/"}},V={},Y=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Docker",id:"docker",level:3},{value:"SQL client",id:"sql-client",level:3},{value:"curl",id:"curl",level:3},{value:"Terminology",id:"terminology",level:2},{value:"FE",id:"fe",level:3},{value:"BE",id:"be",level:3},{value:"Launch StarRocks",id:"launch-starrocks",level:2},{value:"SQL clients",id:"sql-clients",level:2},{value:"Download the data",id:"download-the-data",level:2},{value:"New York City crash data",id:"new-york-city-crash-data",level:3},{value:"Weather data",id:"weather-data",level:3},{value:"Connect to StarRocks with a SQL client",id:"connect-to-starrocks-with-a-sql-client",level:3},{value:"Create some tables",id:"create-some-tables",level:2},{value:"Load two datasets",id:"load-two-datasets",level:2},{value:"New York City collision data - Crashes",id:"new-york-city-collision-data---crashes",level:3},{value:"Weather data",id:"weather-data-1",level:3},{value:"Answer some questions",id:"answer-some-questions",level:2},{value:"Summary",id:"summary",level:2},{value:"Notes on the curl commands",id:"notes-on-the-curl-commands",level:2},{value:"More information",id:"more-information",level:2}];function H(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.M)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"starrocks-basics",children:"StarRocks basics"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial covers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Running StarRocks in a single Docker container"}),"\n",(0,s.jsx)(n.li,{children:"Loading two public datasets including basic transformation of the data"}),"\n",(0,s.jsx)(n.li,{children:"Analyzing the data with SELECT and JOIN"}),"\n",(0,s.jsxs)(n.li,{children:["Basic data transformation (the ",(0,s.jsx)(n.strong,{children:"T"})," in ETL)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The data used is provided by NYC OpenData and the National Centers for Environmental Information."}),"\n",(0,s.jsx)(n.p,{children:"Both of these datasets are very large, and because this tutorial is intended to help you get exposed to working with StarRocks we are not going to load data for the past 120 years. You can run the Docker image and load this data on a machine with 4\xa0GB RAM assigned to Docker. For larger fault-tolerant and scalable deployments we have other documentation and will provide that later."}),"\n",(0,s.jsx)(n.p,{children:"There is a lot of information in this document, and it is presented with the step by step content at the beginning, and the technical details at the end. This is done to serve these purposes in this order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Allow the reader to load data in StarRocks and analyze that data."}),"\n",(0,s.jsx)(n.li,{children:"Explain the basics of data transformation during loading."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"Docker"})}),"\n",(0,s.jsx)(n.li,{children:"4\xa0GB RAM assigned to Docker"}),"\n",(0,s.jsx)(n.li,{children:"10\xa0GB free disk space assigned to Docker"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sql-client",children:"SQL client"}),"\n",(0,s.jsx)(n.p,{children:"You can use the SQL client provided in the Docker environment, or use one on your system. Many MySQL compatible clients will work, and this guide covers the configuration of DBeaver and MySQL WorkBench."}),"\n",(0,s.jsx)(n.h3,{id:"curl",children:"curl"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"curl"})," is used to issue the data load job to StarRocks, and to download the datasets. Check to see if you have it installed by running ",(0,s.jsx)(n.code,{children:"curl"})," or ",(0,s.jsx)(n.code,{children:"curl.exe"})," at your OS prompt. If curl is not installed, ",(0,s.jsx)(n.a,{href:"https://curl.se/dlwiz/?type=bin",children:"get curl here"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"terminology",children:"Terminology"}),"\n",(0,s.jsx)(n.h3,{id:"fe",children:"FE"}),"\n",(0,s.jsx)(n.p,{children:"Frontend nodes are responsible for metadata management, client connection management, query planning, and query scheduling. Each FE stores and maintains a complete copy of metadata in its memory, which guarantees indiscriminate services among the FEs."}),"\n",(0,s.jsx)(n.h3,{id:"be",children:"BE"}),"\n",(0,s.jsx)(n.p,{children:"Backend nodes are responsible for both data storage and executing query plans."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"launch-starrocks",children:"Launch StarRocks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -p 9030:9030 -p 8030:8030 -p 8040:8040 -itd \\\n--name quickstart starrocks/allin1-ubuntu\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"sql-clients",children:"SQL clients"}),"\n",(0,s.jsx)(q,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"download-the-data",children:"Download the data"}),"\n",(0,s.jsx)(n.p,{children:"Download these two datasets to your machine. You can download them to the host machine where you are running Docker, they do not need to be downloaded inside the container."}),"\n",(0,s.jsx)(n.h3,{id:"new-york-city-crash-data",children:"New York City crash data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'reference title="Download crash data"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/4482ab7e53871fb531cc311a76f26edf60658c07/ci/SHELL/quickstart/basic/NYPD_download#L3-L5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"weather-data",children:"Weather data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'reference title="Download weather data"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/f11fcd0f1e80526c09fa838c0fa31c315bc0598c/ci/SHELL/quickstart/basic/Weather_download#L3-L5\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"connect-to-starrocks-with-a-sql-client",children:"Connect to StarRocks with a SQL client"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"If you are using a client other than the mysql CLI, open that now."})}),"\n",(0,s.jsxs)(n.p,{children:["This command will run the ",(0,s.jsx)(n.code,{children:"mysql"})," command in the Docker container:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'docker exec -it quickstart \\\nmysql -P 9030 -h 127.0.0.1 -u root --prompt="StarRocks > "\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"create-some-tables",children:"Create some tables"}),"\n",(0,s.jsx)(r,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"load-two-datasets",children:"Load two datasets"}),"\n",(0,s.jsx)(n.p,{children:"There are many ways to load data into StarRocks. For this tutorial the simplest way is to use curl and StarRocks Stream Load."}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["Open a new shell as these curl commands are run at the operating system prompt, not in the ",(0,s.jsx)(n.code,{children:"mysql"})," client. The commands refer to the datasets that you downloaded, so run them from the directory where you downloaded the files."]}),(0,s.jsxs)(n.p,{children:["You will be prompted for a password. You probably have not assigned a password to the MySQL ",(0,s.jsx)(n.code,{children:"root"})," user, so just hit enter."]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"curl"})," commands look complex, but they are explained in detail at the end of the tutorial. For now, we recommend running the commands and running some SQL to analyze the data, and then reading about the data loading details at the end."]}),"\n",(0,s.jsx)(n.h3,{id:"new-york-city-collision-data---crashes",children:"New York City collision data - Crashes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'reference title="Stream crash data into StarRocks"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/0f0e41e5f46af64f3b566d465aa2797aa46bf142/ci/SHELL/quickstart/basic/NYPD_stream_load#L3-L12\n"})}),"\n",(0,s.jsx)(n.p,{children:"Here is the output of the preceding command. The first highlighted section shows what you should expect to see (OK and all but one row inserted). One row was filtered out because it does not contain the correct number of columns."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'Enter host password for user \'root\':\n{\n    "TxnId": 2,\n    "Label": "crashdata-0",\n    "Status": "Success",\n    # highlight-start\n    "Message": "OK",\n    "NumberTotalRows": 423726,\n    "NumberLoadedRows": 423725,\n    # highlight-end\n    "NumberFilteredRows": 1,\n    "NumberUnselectedRows": 0,\n    "LoadBytes": 96227746,\n    "LoadTimeMs": 1013,\n    "BeginTxnTimeMs": 21,\n    "StreamLoadPlanTimeMs": 63,\n    "ReadDataTimeMs": 563,\n    "WriteDataTimeMs": 870,\n    "CommitAndPublishTimeMs": 57,\n    # highlight-start\n    "ErrorURL": "http://127.0.0.1:8040/api/_load_error_log?file=error_log_da41dd88276a7bfc_739087c94262ae9f"\n    # highlight-end\n}%\n'})}),"\n",(0,s.jsx)(n.p,{children:"If there was an error the output provides a URL to see the error messages. Open this in a browser to find out what happened. Expand the detail to see the error message:"}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Reading error messages in the browser"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'Error: Value count does not match column count. Expect 29, but got 32.\n\nColumn delimiter: 44,Row delimiter: 10.. Row: 09/06/2015,14:15,,,40.6722269,-74.0110059,"(40.6722269, -74.0110059)",,,"R/O 1 BEARD ST. ( IKEA\'S \n09/14/2015,5:30,BRONX,10473,40.814551,-73.8490955,"(40.814551, -73.8490955)",TORRY AVENUE                    ,NORTON AVENUE                   ,,0,0,0,0,0,0,0,0,Driver Inattention/Distraction,Unspecified,,,,3297457,PASSENGER VEHICLE,PASSENGER VEHICLE,,,\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"weather-data-1",children:"Weather data"}),"\n",(0,s.jsx)(n.p,{children:"Load the weather dataset in the same manner as you loaded the crash data."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'reference title="Stream weather data into StarRocks"',children:"https://github.com/DanRoscigno/SingleSourceCodeTestingAndDocs/blob/9f5fb21071124d9814fbf8cbb828b4c93a3d12da/ci/SHELL/quickstart/basic/Weather_stream_load#L3-L12\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"answer-some-questions",children:"Answer some questions"}),"\n",(0,s.jsx)(R,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"In this tutorial you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deployed StarRocks in Docker"}),"\n",(0,s.jsx)(n.li,{children:"Loaded crash data provided by New York City and weather data provided by NOAA"}),"\n",(0,s.jsx)(n.li,{children:"Analyzed the data using SQL JOINs to find out that driving in low visibility or icy streets is a bad idea"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"There is more to learn; we intentionally glossed over the data transformation done during the Stream Load. The details on that are in the notes on the curl commands below."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"notes-on-the-curl-commands",children:"Notes on the curl commands"}),"\n",(0,s.jsx)(I,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"more-information",children:"More information"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"../table_design/StarRocks_table_design.md",children:"StarRocks table design"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"../cover_pages/mv_use_cases.mdx",children:"Materialized views"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"../sql-reference/sql-statements/data-manipulation/STREAM_LOAD.md",children:"Stream Load"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://data.cityofnewyork.us/Public-Safety/Motor-Vehicle-Collisions-Crashes/h9gi-nx95",children:"Motor Vehicle Collisions - Crashes"})," dataset is provided by New York City subject to these ",(0,s.jsx)(n.a,{href:"https://www.nyc.gov/home/terms-of-use.page",children:"terms of use"})," and ",(0,s.jsx)(n.a,{href:"https://www.nyc.gov/home/privacy-policy.page",children:"privacy policy"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://www.ncdc.noaa.gov/cdo-web/datatools/lcd",children:"Local Climatological Data"}),"(LCD) is provided by NOAA with this ",(0,s.jsx)(n.a,{href:"https://www.noaa.gov/disclaimer",children:"disclaimer"})," and this ",(0,s.jsx)(n.a,{href:"https://www.noaa.gov/protecting-your-privacy",children:"privacy policy"}),"."]})]})}function F(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(H,{...e})}):H(e)}},24:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/DBeaver-1-58907bd9df44bba1e40282214e4a056c.png"},4684:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/DBeaver-2-8e4bdc09135b4738944d7016bfb1af94.png"},1948:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/Workbench-1-9fd3a3126d5f83478e51891287e412b9.png"},5344:(e,n,t)=>{t.d(n,{c:()=>s});const s=t.p+"assets/images/Workbench-2-efba18763e56101091746837ae666b5e.png"}}]);